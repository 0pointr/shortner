/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'

group = 'com.debajoy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

def tomcatHome = '/media/user_mount/apache-tomcat-new/'

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
}

eclipse {
   pathVariables 'GRADLE_USER_HOME': gradle.gradleUserHomeDir
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'javax.servlet:javax.servlet-api:3.0.1'
    compile 'org.slf4j:slf4j-log4j12:1.8.0-alpha2'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.26'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    compile group: 'org.springframework', name: 'spring-webmvc', version: '5.1.6.RELEASE'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-text
	compile group: 'org.apache.commons', name: 'commons-text', version: '1.7'
	// https://mvnrepository.com/artifact/javax.servlet/jstl
	compile group: 'javax.servlet', name: 'jstl', version: '1.2'

    runtimeOnly 'javax.xml.bind:jaxb-api:2.3.1'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    // testCompile 'junit:junit:4.12'
}

task deploy(type: Copy, dependsOn: war) {
    from war.archivePath
    into "${tomcatHome}/webapps"
    include "*.war"
    rename{
        fileName -> fileName.replace("-$project.version", "")
    }
}

